import { FincraCore } from '../../api';
import { IEnvironment } from '../../utils';
import { CreateConversionDto } from './dto';
/**
 * The conversion module for handling the conversion related operations.
 * @class Conversion
 * @extends FincraCore
 * @param {string} publicKey - The public key of the merchant
 * @param {string} secretKey - The secret key of the merchant
 * @param {IEnvironment} environment - The environment of the merchant
 */
export declare class Conversion extends FincraCore {
    constructor(publicKey: string, secretKey: string, environment?: IEnvironment);
    /**
     * This function gets all the conversions for a business
     * @param {string} id - The id of the business you want to get the conversions for.
     * @returns An array of conversions objects
     */
    getBusinessConversions(id: string): Promise<any>;
    /**
     * It fetches a conversion by id.
     * @param {string} conversionId - FetchConversionDto
     * @returns The conversion object
     */
    fetchConversion(conversionId: string): Promise<any>;
    /**
     * It creates a conversion for a business.
     * @param {CreateConversionDto} conversion - CreateConversionDto
     * @returns The response from the API which contains the conversion object
     */
    createConversion(conversion: CreateConversionDto): Promise<any>;
}
